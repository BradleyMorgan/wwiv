#!/bin/bash
#
# WWIV Build Script.
#
# Required Variables:
# WORKSPACE - Jenkins workspace
# BUILD_NUMBER - Jenkins Build number


rm ${WORKSPACE}/wwiv-build-linux-*.tar.gz

set -e

declare -r RELEASE_TGZ=${WORKSPACE}/wwiv-build-linux-${BUILD_NUMBER}.tar.gz
echo "WWIV BBS Build"
echo "Workspace: ${WORKSPACE}"
echo "Version:   ${BUILD_NUMBER}"
echo "Archive:   ${RELEASE_TGZ}"

echo "Cleaning up release dir"
if [[ -d "${WORKSPACE}/release" ]]
then
  rm -rf "${WORKSPACE}/release"
fi
mkdir -p "${WORKSPACE}/release"
echo "Created release dir: ${WORKSPACE}/release"

echo "Building binaries"
cd ${WORKSPACE}
sed -i -e "s@.development@.${BUILD_NUMBER}@" core/version.cpp

echo "Compiling dependencies that are not CMake friendly"
pushd deps/cl342
make -j12
popd > /dev/null

echo "Compiling Everything"
cmake .
make -j12 

echo "Populating built binaries"
cp  ${WORKSPACE}/bbs/bbs \
    ${WORKSPACE}/init/init \
    ${WORKSPACE}/nodemgr/nodemgr \
    ${WORKSPACE}/networkb/networkb \
    ${WORKSPACE}/network/network \
    ${WORKSPACE}/network1/network1 \
    ${WORKSPACE}/network2/network2 \
    ${WORKSPACE}/network3/network3 \
    ${WORKSPACE}/wwivutil/wwivutil \
    ${WORKSPACE}/release

echo "Creating Menus"
cd ${WORKSPACE}/bbs/admin/menus/en
zip -r ${WORKSPACE}/release/en-menus.zip *

echo "Creating zip-city"
cd ${WORKSPACE}/bbs/admin
zip -r ${WORKSPACE}/release/zip-city.zip zip-city/*

echo "Creating regions"
cd ${WORKSPACE}/bbs/admin
zip -r ${WORKSPACE}/release/regions.zip regions/*

echo "adding common files"
cd ${WORKSPACE}/bbs/admin
shopt -s extglob
set +e
cp -v !(*.bat) ${WORKSPACE}/release
RESULT=$?
set -e
# cp returns non-zero if we skip directories, so do our own check
if [[ $RESULT -gt 1 ]]
then
  exit 1
fi
shopt -u extglob

echo "adding linux-specific files"
cd ${WORKSPACE}/bbs/admin/unix
shopt -s dotglob
cp -a * ${WORKSPACE}/release
shopt -u dotglob

echo "Creating build.nfo file"
echo "Build URL ${BUILD_URL}" > ${WORKSPACE}/release/build.nfo
echo "Build Version: ${BUILD_NUMBER}" >> ${WORKSPACE}/release/build.nfo

echo "Creating release archive: ${RELEASE_TGZ}"
cd ${WORKSPACE}/release
shopt -s dotglob
tar zcvf ${RELEASE_TGZ} * 
shopt -u dotglob

echo "Archive file: ${RELEASE_TGZ}"
echo "File Contents:"
tar ztvf ${RELEASE_TGZ}
